name: "Ethereum ERC20 token"
sid: ethereum-erc20
description: "MESG Service to interact with an Ethereum ERC20 token"
repository: https://github.com/mesg-foundation/service-ethereum-erc20
configuration:
  env:
    - PROVIDER_ENDPOINT=https://mainnet.infura.io/
    - BLOCK_CONFIRMATIONS=4
    - DEFAULT_GAS_LIMIT=1000000
    - CONTRACT_ADDRESS=
events:
  approval:
    name: "Approval"
    description: "The approval event of a ERC20. This event happens when an approval occurs"
    data:
      blockNumber:
        name: "Block number"
        description: "Block number the associated transaction"
        type: Number
      transactionHash:
        name: "Transaction hash"
        description: "Hash of the transaction"
        type: String
      owner:
        name: "Owner"
        description: "Address of the owner"
        type: String
      spender:
        name: "Spender"
        description: "Address of the spender"
        type: String
      value:
        name: "Value"
        description: "Value of the approval in token unit"
        type: String
      contractAddress: &contractAddressParam
        name: "Contract address"
        description: "The address of the contract"
        type: String
  transfer:
    name: "Transfer"
    description: "The transfer event of a ERC20. This event happens when a transfer occurs"
    data:
      blockNumber:
        name: "Block number"
        description: "Block number the associated transaction"
        type: Number
      transactionHash:
        name: "Transaction hash"
        description: "Hash of the transaction"
        type: String
      from:
        name: "From"
        description: "Address of the spender"
        type: String
      to:
        name: "To"
        description: "Address of the receiver"
        type: String
      value:
        name: "Value"
        description: "Value of the approval in token unit"
        type: String
      contractAddress: *contractAddressParam
tasks:
  name:
    name: "Token's name"
    description: "Get the name of a ERC20"
    inputs:
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          name:
            name: "Token's name"
            description: "The name of the ERC20"
            type: String
      error: &errorOutput
        name: "Error"
        description: "Output when an error occurs"
        data:
          message:
            name: "Message"
            description: "The error message"
            type: String
  symbol:
    name: "Token's symbol"
    description: "Get the symbol of a ERC20"
    inputs:
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          symbol:
            name: "Token's symbol"
            description: "The symbol of the ERC20"
            type: String
      error: *errorOutput
  decimals:
    name: "Number of decimals"
    description: "Get the number of decimals of a ERC20"
    inputs:
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          decimals:
            name: "Number of decimals"
            description: "The number of decimals of the ERC20"
            type: Number
      error: *errorOutput
  totalSupply:
    name: "Total Supply"
    description: "Get the total supply of a ERC20"
    inputs:
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          totalSupply:
            name: "Total supply"
            description: "The total supply of the ERC20 in token unit"
            type: String
      error: *errorOutput
  balanceOf:
    name: "Balance of"
    description: "Get the balance of a given address"
    inputs:
      address:
        name: "Address"
        description: "The address to get the balance from"
        type: String
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          balance:
            name: "Balance"
            description: "The balance of the inputted address in token unit"
            type: String
      error: *errorOutput
  allowance:
    name: "Allowance"
    description: "Get the allowance between an owner and a spender"
    inputs:
      owner:
        name: "Owner"
        description: "The address to get the owner"
        type: String
      spender:
        name: "Spender"
        description: "The address to get the spender"
        type: String
      contractAddress: *contractAddressParam
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          remaining:
            name: "Remaining"
            description: "The remaining balance of the allowance in token unit"
            type: String
      error: *errorOutput
  transfer:
    name: "Transfer"
    description: "Transfer tokens to an address"
    inputs:
      to:
        name: "To"
        description: "The address to transfer the token to"
        type: String
      value:
        name: "Value"
        description: "The number of tokens to transfer in token unit"
        type: String
      contractAddress: *contractAddressParam
      privateKey: &privateKeyInput
        name: "Signer private key"
        description: "The private key to sign the transaction"
        type: String
      gasPrice: &gasPriceInput
        name: "Gas Price"
        description: "The gas price in wei to use for this transaction"
        type: String
        optional: true
      gasLimit: &gasLimitInput
        name: "Gas Limit"
        description: "The maximum gas provided for this transaction"
        type: Number
        optional: true
    outputs: &signedTransactionOutputs
      success:
        name: "Success"
        description: "Output when the task executes successfully"
        data:
          transactionHash:
            name: "Transaction hash"
            description: "Hash of the transaction"
            type: String
      error: *errorOutput
  approve:
    name: "Approve"
    description: "Authorize a future transfer from"
    inputs:
      spender:
        name: "Spender"
        description: "The address to authorize to transfer to"
        type: String
      value:
        name: "Value"
        description: "The number of token to authorize to transfer in token unit"
        type: String
      contractAddress: *contractAddressParam
      privateKey: *privateKeyInput
      gasPrice: *gasPriceInput
      gasLimit: *gasLimitInput
    outputs:
      <<: *signedTransactionOutputs
  transferFrom:
    name: "Transfer From"
    description: "Transfer tokens from an approved address"
    inputs:
      from:
        name: "From"
        description: "The address to get the tokens from"
        type: String
      to:
        name: "To"
        description: "The address to transfer the tokens to"
        type: String
      value:
        name: "Value"
        description: "The number of token to transfer in token unit"
        type: String
      contractAddress: *contractAddressParam
      privateKey: *privateKeyInput
      gasPrice: *gasPriceInput
      gasLimit: *gasLimitInput
    outputs:
      <<: *signedTransactionOutputs
